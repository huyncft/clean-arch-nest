version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: clean-arch-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
    ports:
      - '${DB_PORT}:5432'
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - clean-arch-network

  redis:
    image: redis:7-alpine
    container_name: clean-arch-redis
    ports:
      - '6379:6379'
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - clean-arch-network

  minio:
    image: minio/minio
    container_name: clean-arch-minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS:-minioadmin}
    restart: always
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - clean-arch-network

  prometheus:
    image: prom/prometheus
    container_name: clean-arch-prometheus
    ports:
      - '9090:9090'
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - clean-arch-network

  grafana:
    image: grafana/grafana
    container_name: clean-arch-grafana
    ports:
      - '3000:3000'
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - clean-arch-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  clean-arch-network:
    driver: bridge
